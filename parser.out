Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> statement
Rule 2     start -> start statement
Rule 3     statement -> IF LPAREN bool RPAREN LKEY statement RKEY ELSE LKEY statement RKEY
Rule 4     bool -> term LTHAN term
Rule 5     bool -> term GTHAN term
Rule 6     bool -> term LETHAN term
Rule 7     bool -> term GETHAN term
Rule 8     bool -> term EQUAL term
Rule 9     statement -> WHILE LPAREN bool RPAREN LKEY statement RKEY
Rule 10    statement -> DO LKEY statement RKEY WHILE LPAREN bool RPAREN TERMINATOR
Rule 11    statement -> ID ATT expression TERMINATOR
Rule 12    statement -> ID ATT bool TERMINATOR
Rule 13    statement -> PRINT LPAREN expression RPAREN TERMINATOR
Rule 14    expression -> expression PLUS expression
Rule 15    expression -> expression MINUS expression
Rule 16    expression -> expression TIMES expression
Rule 17    expression -> expression DIVIDE expression
Rule 18    expression -> LPAREN expression RPAREN
Rule 19    expression -> term
Rule 20    term -> NUMBER
Rule 21    term -> ID

Terminals, with rules where they appear

ATT                  : 11 12
DIVIDE               : 17
DO                   : 10
ELSE                 : 3
EQUAL                : 8
GETHAN               : 7
GTHAN                : 5
ID                   : 11 12 21
IF                   : 3
LETHAN               : 6
LKEY                 : 3 3 9 10
LPAREN               : 3 9 10 13 18
LTHAN                : 4
MINUS                : 15
NUMBER               : 20
PLUS                 : 14
PRINT                : 13
RKEY                 : 3 3 9 10
RPAREN               : 3 9 10 13 18
TERMINATOR           : 10 11 12 13
TIMES                : 16
WHILE                : 9 10
error                : 

Nonterminals, with rules where they appear

bool                 : 3 9 10 12
expression           : 11 13 14 14 15 15 16 16 17 17 18
start                : 2 0
statement            : 1 2 3 3 9 10
term                 : 4 4 5 5 6 6 7 7 8 8 19

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . statement
    (2) start -> . start statement
    (3) statement -> . IF LPAREN bool RPAREN LKEY statement RKEY ELSE LKEY statement RKEY
    (9) statement -> . WHILE LPAREN bool RPAREN LKEY statement RKEY
    (10) statement -> . DO LKEY statement RKEY WHILE LPAREN bool RPAREN TERMINATOR
    (11) statement -> . ID ATT expression TERMINATOR
    (12) statement -> . ID ATT bool TERMINATOR
    (13) statement -> . PRINT LPAREN expression RPAREN TERMINATOR

    IF              shift and go to state 3
    WHILE           shift and go to state 4
    DO              shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 7

    start                          shift and go to state 1
    statement                      shift and go to state 2

state 1

    (0) S' -> start .
    (2) start -> start . statement
    (3) statement -> . IF LPAREN bool RPAREN LKEY statement RKEY ELSE LKEY statement RKEY
    (9) statement -> . WHILE LPAREN bool RPAREN LKEY statement RKEY
    (10) statement -> . DO LKEY statement RKEY WHILE LPAREN bool RPAREN TERMINATOR
    (11) statement -> . ID ATT expression TERMINATOR
    (12) statement -> . ID ATT bool TERMINATOR
    (13) statement -> . PRINT LPAREN expression RPAREN TERMINATOR

    IF              shift and go to state 3
    WHILE           shift and go to state 4
    DO              shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 7

    statement                      shift and go to state 8

state 2

    (1) start -> statement .

    IF              reduce using rule 1 (start -> statement .)
    WHILE           reduce using rule 1 (start -> statement .)
    DO              reduce using rule 1 (start -> statement .)
    ID              reduce using rule 1 (start -> statement .)
    PRINT           reduce using rule 1 (start -> statement .)
    $end            reduce using rule 1 (start -> statement .)


state 3

    (3) statement -> IF . LPAREN bool RPAREN LKEY statement RKEY ELSE LKEY statement RKEY

    LPAREN          shift and go to state 9


state 4

    (9) statement -> WHILE . LPAREN bool RPAREN LKEY statement RKEY

    LPAREN          shift and go to state 10


state 5

    (10) statement -> DO . LKEY statement RKEY WHILE LPAREN bool RPAREN TERMINATOR

    LKEY            shift and go to state 11


state 6

    (11) statement -> ID . ATT expression TERMINATOR
    (12) statement -> ID . ATT bool TERMINATOR

    ATT             shift and go to state 12


state 7

    (13) statement -> PRINT . LPAREN expression RPAREN TERMINATOR

    LPAREN          shift and go to state 13


state 8

    (2) start -> start statement .

    IF              reduce using rule 2 (start -> start statement .)
    WHILE           reduce using rule 2 (start -> start statement .)
    DO              reduce using rule 2 (start -> start statement .)
    ID              reduce using rule 2 (start -> start statement .)
    PRINT           reduce using rule 2 (start -> start statement .)
    $end            reduce using rule 2 (start -> start statement .)


state 9

    (3) statement -> IF LPAREN . bool RPAREN LKEY statement RKEY ELSE LKEY statement RKEY
    (4) bool -> . term LTHAN term
    (5) bool -> . term GTHAN term
    (6) bool -> . term LETHAN term
    (7) bool -> . term GETHAN term
    (8) bool -> . term EQUAL term
    (20) term -> . NUMBER
    (21) term -> . ID

    NUMBER          shift and go to state 16
    ID              shift and go to state 17

    bool                           shift and go to state 14
    term                           shift and go to state 15

state 10

    (9) statement -> WHILE LPAREN . bool RPAREN LKEY statement RKEY
    (4) bool -> . term LTHAN term
    (5) bool -> . term GTHAN term
    (6) bool -> . term LETHAN term
    (7) bool -> . term GETHAN term
    (8) bool -> . term EQUAL term
    (20) term -> . NUMBER
    (21) term -> . ID

    NUMBER          shift and go to state 16
    ID              shift and go to state 17

    bool                           shift and go to state 18
    term                           shift and go to state 15

state 11

    (10) statement -> DO LKEY . statement RKEY WHILE LPAREN bool RPAREN TERMINATOR
    (3) statement -> . IF LPAREN bool RPAREN LKEY statement RKEY ELSE LKEY statement RKEY
    (9) statement -> . WHILE LPAREN bool RPAREN LKEY statement RKEY
    (10) statement -> . DO LKEY statement RKEY WHILE LPAREN bool RPAREN TERMINATOR
    (11) statement -> . ID ATT expression TERMINATOR
    (12) statement -> . ID ATT bool TERMINATOR
    (13) statement -> . PRINT LPAREN expression RPAREN TERMINATOR

    IF              shift and go to state 3
    WHILE           shift and go to state 4
    DO              shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 7

    statement                      shift and go to state 19

state 12

    (11) statement -> ID ATT . expression TERMINATOR
    (12) statement -> ID ATT . bool TERMINATOR
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . term
    (4) bool -> . term LTHAN term
    (5) bool -> . term GTHAN term
    (6) bool -> . term LETHAN term
    (7) bool -> . term GETHAN term
    (8) bool -> . term EQUAL term
    (20) term -> . NUMBER
    (21) term -> . ID

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 16
    ID              shift and go to state 17

    expression                     shift and go to state 20
    bool                           shift and go to state 21
    term                           shift and go to state 23

state 13

    (13) statement -> PRINT LPAREN . expression RPAREN TERMINATOR
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . term
    (20) term -> . NUMBER
    (21) term -> . ID

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 16
    ID              shift and go to state 17

    expression                     shift and go to state 24
    term                           shift and go to state 25

state 14

    (3) statement -> IF LPAREN bool . RPAREN LKEY statement RKEY ELSE LKEY statement RKEY

    RPAREN          shift and go to state 26


state 15

    (4) bool -> term . LTHAN term
    (5) bool -> term . GTHAN term
    (6) bool -> term . LETHAN term
    (7) bool -> term . GETHAN term
    (8) bool -> term . EQUAL term

    LTHAN           shift and go to state 27
    GTHAN           shift and go to state 28
    LETHAN          shift and go to state 29
    GETHAN          shift and go to state 30
    EQUAL           shift and go to state 31


state 16

    (20) term -> NUMBER .

    LTHAN           reduce using rule 20 (term -> NUMBER .)
    GTHAN           reduce using rule 20 (term -> NUMBER .)
    LETHAN          reduce using rule 20 (term -> NUMBER .)
    GETHAN          reduce using rule 20 (term -> NUMBER .)
    EQUAL           reduce using rule 20 (term -> NUMBER .)
    TERMINATOR      reduce using rule 20 (term -> NUMBER .)
    PLUS            reduce using rule 20 (term -> NUMBER .)
    MINUS           reduce using rule 20 (term -> NUMBER .)
    TIMES           reduce using rule 20 (term -> NUMBER .)
    DIVIDE          reduce using rule 20 (term -> NUMBER .)
    RPAREN          reduce using rule 20 (term -> NUMBER .)


state 17

    (21) term -> ID .

    LTHAN           reduce using rule 21 (term -> ID .)
    GTHAN           reduce using rule 21 (term -> ID .)
    LETHAN          reduce using rule 21 (term -> ID .)
    GETHAN          reduce using rule 21 (term -> ID .)
    EQUAL           reduce using rule 21 (term -> ID .)
    TERMINATOR      reduce using rule 21 (term -> ID .)
    PLUS            reduce using rule 21 (term -> ID .)
    MINUS           reduce using rule 21 (term -> ID .)
    TIMES           reduce using rule 21 (term -> ID .)
    DIVIDE          reduce using rule 21 (term -> ID .)
    RPAREN          reduce using rule 21 (term -> ID .)


state 18

    (9) statement -> WHILE LPAREN bool . RPAREN LKEY statement RKEY

    RPAREN          shift and go to state 32


state 19

    (10) statement -> DO LKEY statement . RKEY WHILE LPAREN bool RPAREN TERMINATOR

    RKEY            shift and go to state 33


state 20

    (11) statement -> ID ATT expression . TERMINATOR
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression

    TERMINATOR      shift and go to state 34
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38


state 21

    (12) statement -> ID ATT bool . TERMINATOR

    TERMINATOR      shift and go to state 39


state 22

    (18) expression -> LPAREN . expression RPAREN
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . term
    (20) term -> . NUMBER
    (21) term -> . ID

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 16
    ID              shift and go to state 17

    expression                     shift and go to state 40
    term                           shift and go to state 25

state 23

    (19) expression -> term .
    (4) bool -> term . LTHAN term
    (5) bool -> term . GTHAN term
    (6) bool -> term . LETHAN term
    (7) bool -> term . GETHAN term
    (8) bool -> term . EQUAL term

    TERMINATOR      reduce using rule 19 (expression -> term .)
    PLUS            reduce using rule 19 (expression -> term .)
    MINUS           reduce using rule 19 (expression -> term .)
    TIMES           reduce using rule 19 (expression -> term .)
    DIVIDE          reduce using rule 19 (expression -> term .)
    LTHAN           shift and go to state 27
    GTHAN           shift and go to state 28
    LETHAN          shift and go to state 29
    GETHAN          shift and go to state 30
    EQUAL           shift and go to state 31


state 24

    (13) statement -> PRINT LPAREN expression . RPAREN TERMINATOR
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 41
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38


state 25

    (19) expression -> term .

    RPAREN          reduce using rule 19 (expression -> term .)
    PLUS            reduce using rule 19 (expression -> term .)
    MINUS           reduce using rule 19 (expression -> term .)
    TIMES           reduce using rule 19 (expression -> term .)
    DIVIDE          reduce using rule 19 (expression -> term .)
    TERMINATOR      reduce using rule 19 (expression -> term .)


state 26

    (3) statement -> IF LPAREN bool RPAREN . LKEY statement RKEY ELSE LKEY statement RKEY

    LKEY            shift and go to state 42


state 27

    (4) bool -> term LTHAN . term
    (20) term -> . NUMBER
    (21) term -> . ID

    NUMBER          shift and go to state 16
    ID              shift and go to state 17

    term                           shift and go to state 43

state 28

    (5) bool -> term GTHAN . term
    (20) term -> . NUMBER
    (21) term -> . ID

    NUMBER          shift and go to state 16
    ID              shift and go to state 17

    term                           shift and go to state 44

state 29

    (6) bool -> term LETHAN . term
    (20) term -> . NUMBER
    (21) term -> . ID

    NUMBER          shift and go to state 16
    ID              shift and go to state 17

    term                           shift and go to state 45

state 30

    (7) bool -> term GETHAN . term
    (20) term -> . NUMBER
    (21) term -> . ID

    NUMBER          shift and go to state 16
    ID              shift and go to state 17

    term                           shift and go to state 46

state 31

    (8) bool -> term EQUAL . term
    (20) term -> . NUMBER
    (21) term -> . ID

    NUMBER          shift and go to state 16
    ID              shift and go to state 17

    term                           shift and go to state 47

state 32

    (9) statement -> WHILE LPAREN bool RPAREN . LKEY statement RKEY

    LKEY            shift and go to state 48


state 33

    (10) statement -> DO LKEY statement RKEY . WHILE LPAREN bool RPAREN TERMINATOR

    WHILE           shift and go to state 49


state 34

    (11) statement -> ID ATT expression TERMINATOR .

    IF              reduce using rule 11 (statement -> ID ATT expression TERMINATOR .)
    WHILE           reduce using rule 11 (statement -> ID ATT expression TERMINATOR .)
    DO              reduce using rule 11 (statement -> ID ATT expression TERMINATOR .)
    ID              reduce using rule 11 (statement -> ID ATT expression TERMINATOR .)
    PRINT           reduce using rule 11 (statement -> ID ATT expression TERMINATOR .)
    $end            reduce using rule 11 (statement -> ID ATT expression TERMINATOR .)
    RKEY            reduce using rule 11 (statement -> ID ATT expression TERMINATOR .)


state 35

    (14) expression -> expression PLUS . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . term
    (20) term -> . NUMBER
    (21) term -> . ID

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 16
    ID              shift and go to state 17

    expression                     shift and go to state 50
    term                           shift and go to state 25

state 36

    (15) expression -> expression MINUS . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . term
    (20) term -> . NUMBER
    (21) term -> . ID

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 16
    ID              shift and go to state 17

    expression                     shift and go to state 51
    term                           shift and go to state 25

state 37

    (16) expression -> expression TIMES . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . term
    (20) term -> . NUMBER
    (21) term -> . ID

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 16
    ID              shift and go to state 17

    expression                     shift and go to state 52
    term                           shift and go to state 25

state 38

    (17) expression -> expression DIVIDE . expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . term
    (20) term -> . NUMBER
    (21) term -> . ID

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 16
    ID              shift and go to state 17

    expression                     shift and go to state 53
    term                           shift and go to state 25

state 39

    (12) statement -> ID ATT bool TERMINATOR .

    IF              reduce using rule 12 (statement -> ID ATT bool TERMINATOR .)
    WHILE           reduce using rule 12 (statement -> ID ATT bool TERMINATOR .)
    DO              reduce using rule 12 (statement -> ID ATT bool TERMINATOR .)
    ID              reduce using rule 12 (statement -> ID ATT bool TERMINATOR .)
    PRINT           reduce using rule 12 (statement -> ID ATT bool TERMINATOR .)
    $end            reduce using rule 12 (statement -> ID ATT bool TERMINATOR .)
    RKEY            reduce using rule 12 (statement -> ID ATT bool TERMINATOR .)


state 40

    (18) expression -> LPAREN expression . RPAREN
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 54
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38


state 41

    (13) statement -> PRINT LPAREN expression RPAREN . TERMINATOR

    TERMINATOR      shift and go to state 55


state 42

    (3) statement -> IF LPAREN bool RPAREN LKEY . statement RKEY ELSE LKEY statement RKEY
    (3) statement -> . IF LPAREN bool RPAREN LKEY statement RKEY ELSE LKEY statement RKEY
    (9) statement -> . WHILE LPAREN bool RPAREN LKEY statement RKEY
    (10) statement -> . DO LKEY statement RKEY WHILE LPAREN bool RPAREN TERMINATOR
    (11) statement -> . ID ATT expression TERMINATOR
    (12) statement -> . ID ATT bool TERMINATOR
    (13) statement -> . PRINT LPAREN expression RPAREN TERMINATOR

    IF              shift and go to state 3
    WHILE           shift and go to state 4
    DO              shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 7

    statement                      shift and go to state 56

state 43

    (4) bool -> term LTHAN term .

    RPAREN          reduce using rule 4 (bool -> term LTHAN term .)
    TERMINATOR      reduce using rule 4 (bool -> term LTHAN term .)


state 44

    (5) bool -> term GTHAN term .

    RPAREN          reduce using rule 5 (bool -> term GTHAN term .)
    TERMINATOR      reduce using rule 5 (bool -> term GTHAN term .)


state 45

    (6) bool -> term LETHAN term .

    RPAREN          reduce using rule 6 (bool -> term LETHAN term .)
    TERMINATOR      reduce using rule 6 (bool -> term LETHAN term .)


state 46

    (7) bool -> term GETHAN term .

    RPAREN          reduce using rule 7 (bool -> term GETHAN term .)
    TERMINATOR      reduce using rule 7 (bool -> term GETHAN term .)


state 47

    (8) bool -> term EQUAL term .

    RPAREN          reduce using rule 8 (bool -> term EQUAL term .)
    TERMINATOR      reduce using rule 8 (bool -> term EQUAL term .)


state 48

    (9) statement -> WHILE LPAREN bool RPAREN LKEY . statement RKEY
    (3) statement -> . IF LPAREN bool RPAREN LKEY statement RKEY ELSE LKEY statement RKEY
    (9) statement -> . WHILE LPAREN bool RPAREN LKEY statement RKEY
    (10) statement -> . DO LKEY statement RKEY WHILE LPAREN bool RPAREN TERMINATOR
    (11) statement -> . ID ATT expression TERMINATOR
    (12) statement -> . ID ATT bool TERMINATOR
    (13) statement -> . PRINT LPAREN expression RPAREN TERMINATOR

    IF              shift and go to state 3
    WHILE           shift and go to state 4
    DO              shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 7

    statement                      shift and go to state 57

state 49

    (10) statement -> DO LKEY statement RKEY WHILE . LPAREN bool RPAREN TERMINATOR

    LPAREN          shift and go to state 58


state 50

    (14) expression -> expression PLUS expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    TERMINATOR      reduce using rule 14 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 14 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38

  ! PLUS            [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression PLUS expression .) ]


state 51

    (15) expression -> expression MINUS expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    TERMINATOR      reduce using rule 15 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 15 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38

  ! PLUS            [ reduce using rule 15 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 15 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 15 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression MINUS expression .) ]


state 52

    (16) expression -> expression TIMES expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    TERMINATOR      reduce using rule 16 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 16 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38

  ! PLUS            [ reduce using rule 16 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 16 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression TIMES expression .) ]


state 53

    (17) expression -> expression DIVIDE expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    TERMINATOR      reduce using rule 17 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 17 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38

  ! PLUS            [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]


state 54

    (18) expression -> LPAREN expression RPAREN .

    TERMINATOR      reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 18 (expression -> LPAREN expression RPAREN .)


state 55

    (13) statement -> PRINT LPAREN expression RPAREN TERMINATOR .

    IF              reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    WHILE           reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    DO              reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    ID              reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    PRINT           reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    $end            reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN TERMINATOR .)
    RKEY            reduce using rule 13 (statement -> PRINT LPAREN expression RPAREN TERMINATOR .)


state 56

    (3) statement -> IF LPAREN bool RPAREN LKEY statement . RKEY ELSE LKEY statement RKEY

    RKEY            shift and go to state 59


state 57

    (9) statement -> WHILE LPAREN bool RPAREN LKEY statement . RKEY

    RKEY            shift and go to state 60


state 58

    (10) statement -> DO LKEY statement RKEY WHILE LPAREN . bool RPAREN TERMINATOR
    (4) bool -> . term LTHAN term
    (5) bool -> . term GTHAN term
    (6) bool -> . term LETHAN term
    (7) bool -> . term GETHAN term
    (8) bool -> . term EQUAL term
    (20) term -> . NUMBER
    (21) term -> . ID

    NUMBER          shift and go to state 16
    ID              shift and go to state 17

    bool                           shift and go to state 61
    term                           shift and go to state 15

state 59

    (3) statement -> IF LPAREN bool RPAREN LKEY statement RKEY . ELSE LKEY statement RKEY

    ELSE            shift and go to state 62


state 60

    (9) statement -> WHILE LPAREN bool RPAREN LKEY statement RKEY .

    IF              reduce using rule 9 (statement -> WHILE LPAREN bool RPAREN LKEY statement RKEY .)
    WHILE           reduce using rule 9 (statement -> WHILE LPAREN bool RPAREN LKEY statement RKEY .)
    DO              reduce using rule 9 (statement -> WHILE LPAREN bool RPAREN LKEY statement RKEY .)
    ID              reduce using rule 9 (statement -> WHILE LPAREN bool RPAREN LKEY statement RKEY .)
    PRINT           reduce using rule 9 (statement -> WHILE LPAREN bool RPAREN LKEY statement RKEY .)
    $end            reduce using rule 9 (statement -> WHILE LPAREN bool RPAREN LKEY statement RKEY .)
    RKEY            reduce using rule 9 (statement -> WHILE LPAREN bool RPAREN LKEY statement RKEY .)


state 61

    (10) statement -> DO LKEY statement RKEY WHILE LPAREN bool . RPAREN TERMINATOR

    RPAREN          shift and go to state 63


state 62

    (3) statement -> IF LPAREN bool RPAREN LKEY statement RKEY ELSE . LKEY statement RKEY

    LKEY            shift and go to state 64


state 63

    (10) statement -> DO LKEY statement RKEY WHILE LPAREN bool RPAREN . TERMINATOR

    TERMINATOR      shift and go to state 65


state 64

    (3) statement -> IF LPAREN bool RPAREN LKEY statement RKEY ELSE LKEY . statement RKEY
    (3) statement -> . IF LPAREN bool RPAREN LKEY statement RKEY ELSE LKEY statement RKEY
    (9) statement -> . WHILE LPAREN bool RPAREN LKEY statement RKEY
    (10) statement -> . DO LKEY statement RKEY WHILE LPAREN bool RPAREN TERMINATOR
    (11) statement -> . ID ATT expression TERMINATOR
    (12) statement -> . ID ATT bool TERMINATOR
    (13) statement -> . PRINT LPAREN expression RPAREN TERMINATOR

    IF              shift and go to state 3
    WHILE           shift and go to state 4
    DO              shift and go to state 5
    ID              shift and go to state 6
    PRINT           shift and go to state 7

    statement                      shift and go to state 66

state 65

    (10) statement -> DO LKEY statement RKEY WHILE LPAREN bool RPAREN TERMINATOR .

    IF              reduce using rule 10 (statement -> DO LKEY statement RKEY WHILE LPAREN bool RPAREN TERMINATOR .)
    WHILE           reduce using rule 10 (statement -> DO LKEY statement RKEY WHILE LPAREN bool RPAREN TERMINATOR .)
    DO              reduce using rule 10 (statement -> DO LKEY statement RKEY WHILE LPAREN bool RPAREN TERMINATOR .)
    ID              reduce using rule 10 (statement -> DO LKEY statement RKEY WHILE LPAREN bool RPAREN TERMINATOR .)
    PRINT           reduce using rule 10 (statement -> DO LKEY statement RKEY WHILE LPAREN bool RPAREN TERMINATOR .)
    $end            reduce using rule 10 (statement -> DO LKEY statement RKEY WHILE LPAREN bool RPAREN TERMINATOR .)
    RKEY            reduce using rule 10 (statement -> DO LKEY statement RKEY WHILE LPAREN bool RPAREN TERMINATOR .)


state 66

    (3) statement -> IF LPAREN bool RPAREN LKEY statement RKEY ELSE LKEY statement . RKEY

    RKEY            shift and go to state 67


state 67

    (3) statement -> IF LPAREN bool RPAREN LKEY statement RKEY ELSE LKEY statement RKEY .

    IF              reduce using rule 3 (statement -> IF LPAREN bool RPAREN LKEY statement RKEY ELSE LKEY statement RKEY .)
    WHILE           reduce using rule 3 (statement -> IF LPAREN bool RPAREN LKEY statement RKEY ELSE LKEY statement RKEY .)
    DO              reduce using rule 3 (statement -> IF LPAREN bool RPAREN LKEY statement RKEY ELSE LKEY statement RKEY .)
    ID              reduce using rule 3 (statement -> IF LPAREN bool RPAREN LKEY statement RKEY ELSE LKEY statement RKEY .)
    PRINT           reduce using rule 3 (statement -> IF LPAREN bool RPAREN LKEY statement RKEY ELSE LKEY statement RKEY .)
    $end            reduce using rule 3 (statement -> IF LPAREN bool RPAREN LKEY statement RKEY ELSE LKEY statement RKEY .)
    RKEY            reduce using rule 3 (statement -> IF LPAREN bool RPAREN LKEY statement RKEY ELSE LKEY statement RKEY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 50 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 50 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 50 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 50 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 51 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 51 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 51 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 51 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 52 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 52 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 52 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 52 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 53 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 53 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 53 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 53 resolved as shift
